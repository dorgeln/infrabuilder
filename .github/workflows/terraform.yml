name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout builder
        uses: actions/checkout@v2
    
      - name: Checkout state
        uses: actions/checkout@v2
        with:
          repository: dorgeln/infrastate
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
          path: tf

      - name: Create Terraform config
        uses: dorgeln/action-ansible-playbook@v2
        with:
          playbook: tf_config.yml
          directory: ./
          options: |
            -e "TF_PROVIDER='${{ secrets.TF_PROVIDER }}'"
            -e "SSH_KEY_PUB='${{ secrets.SSH_KEY_PUB }}'"
            -e "SSH_KEY_PRIV='${{ secrets.SSH_KEY_PRIV }}'"
            --verbose

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform -chdir=tf init 
        
      - name: Terraform Validate
        id: validate
        run: terraform -chdir=tf validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=tf plan -no-color
        continue-on-error: true
        env:
          OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
          OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
          OS_USER_DOMAIN_NAME: ${{ secrets.OS_USER_DOMAIN_NAME }}
          OS_PROJECT_DOMAIN_NAME: ${{ secrets.OS_PROJECT_DOMAIN_NAME }}
          OS_TENANT_ID: ${{ secrets.OS_TENANT_ID }}
          OS_TENANT_NAME: ${{ secrets.OS_TENANT_NAME }}
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
          OS_REGION_NAME: ${{ secrets.OS_REGION_NAME }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform -chdir=tf apply -auto-approve
        env:
          OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
          OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
          OS_USER_DOMAIN_NAME: ${{ secrets.OS_USER_DOMAIN_NAME }}
          OS_PROJECT_DOMAIN_NAME: ${{ secrets.OS_PROJECT_DOMAIN_NAME }}
          OS_TENANT_ID: ${{ secrets.OS_TENANT_ID }}
          OS_TENANT_NAME: ${{ secrets.OS_TENANT_NAME }}
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          OS_PASSWORD: ${{ secrets.OS_PASSWORD }}
          OS_REGION_NAME: ${{ secrets.OS_REGION_NAME }}

      - name: Ansible Galaxy
        id: galaxy
        run: |
          pip install ovh ansible
          ansible-galaxy collection install community.general
          ansible-galaxy collection install git+https://github.com/dorgeln/infra-ovh-ansible-module
          ansible-galaxy install maresb.micromamba
          ansible-galaxy install geerlingguy.docker 

      - name: Debug Terraform state
        run: terraform -chdir=tf state pull

      - name: Commit Terraform state
        run: |
          git config --global user.name 'infrabuilder'
          git config --global user.email 'infrabuilder@users.noreply.github.com'
          pushd tf
          git add -A
          git diff-index --quiet HEAD || git commit -am `date "+%F-%H-%M-%S"`
          git push
 