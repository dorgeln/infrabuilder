- name: Create terraform directory
  file:
    path: "{{tf}}"
    state: directory

- name: Find existing terraform config
  find:
    paths: "{{tf}}"
    patterns: "*.tf"
  register: tfconfig

- name: Cleanup existing terraform config
  file:
    path: "{{item.path}}"
    state: absent
  loop: "{{tfconfig.files}}"

- name: Create Terraform provider
  template:
    src: "provider_ovh.tf"
    dest: "{{tf}}/provider.tf"
    mode: '0600'

- name: Create Terraform config
  template:
    src: "{{item}}"
    dest: "{{tf}}/{{item}}"
    mode: '0600'
  loop:
    - terraform.tf
    - id_rsa.pub

- name: Create Terraform SSH config
  template:
    src: "ssh.tf"
    dest: "{{tf}}/ssh_{{region|lower}}.tf"
    mode: '0600'
  vars:
    - region: "{{item}}"
    - provider: "openstack"
  loop: "{{regions}}"

- name: Create Terraform DNS provider
  template:
    src: "domain_ovh.tf"
    dest: "{{tf}}/domain.tf"
    mode: '0600'

- name: Create Terraform green proxy config
  template:
    src: "instance.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
    mode: '0600'
  vars:
    - color: "green"
    - id: "proxy"
    - image: "{{gmm_proxy_green_image}}"
    - flavour: "{{gmm_proxy_green_flavour}}"
    - region: "{{item}}"
    - provider: "openstack"
  loop: "{{gmm_proxy_green_regions}}"

- name: Create Terraform green backend config
  template:
    src: "instance.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
    mode: '0600'
  vars:
    - color: "green"
    - id: "backend"
    - image: "{{gmm_backend_green_image}}"
    - flavour: "{{gmm_backend_green_flavour}}"
    - region: "{{item}}"
    - provider: "openstack"
  loop: "{{gmm_backend_green_regions}}"

- name: Create Terraform blue proxy config
  template:
    src: "instance.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
    mode: '0600'
  vars:
    - color: "blue"
    - id: "proxy"
    - image: "{{gmm_proxy_blue_image}}"
    - flavour: "{{gmm_proxy_blue_flavour}}"
    - region: "{{item}}"
    - provider: "openstack"
  loop: "{{gmm_proxy_blue_regions}}"

- name: Create Terraform blue backend config
  template:
    src: "instance.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
    mode: '0600'
  vars:
    - color: "blue"
    - id: "backend"
    - image: "{{gmm_backend_blue_image}}"
    - flavour: "{{gmm_backend_blue_flavour}}"
    - region: "{{item}}"
    - provider: "openstack"
  loop: "{{gmm_backend_blue_regions}}"

- name: Create Terraform proxy dns config
  template:
    src: "record_ovh.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}_{{hostname}}.tf"
    mode: '0600'
  vars:
    - color: "{{active}}"
    - id: "proxy"
    - region: "{{item}}"
    - provider: "openstack"
    - hostname: "{{gmm_hostname}}"
  loop: "{{gmm_proxy_active_regions}}"

- name: Create Terraform proxy green dns config
  template:
    src: "record_ovh.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}_green.tf"
    mode: '0600'
  vars:
    - color: "green"
    - id: "proxy"
    - region: "{{item}}"
    - provider: "openstack"
    - hostname: "{{gmm_hostname_green}}"
  loop: "{{gmm_backend_green_regions}}"


- name: Create Terraform proxy blue dns config
  template:
    src: "record_ovh.tf"
    dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}_blue.tf"
    mode: '0600'
  vars:
    - color: "blue"
    - id: "proxy"
    - region: "{{item}}"
    - provider: "openstack"
    - hostname: "{{gmm_hostname_blue}}"
  loop: "{{gmm_backend_blue_regions}}"



# - name: Create Terraform green cmk config
#   template:
#     src: "instance.tf"
#     dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
#     mode: '0600'
#   vars:
#     - color: "green"
#     - id: "cmk"
#     - image: "{{cmk_green_image}}"
#     - flavour: "{{cmk_green_flavour}}"
#     - region: "{{item}}"
#     - provider: "openstack"
#   loop: "{{cmk_green_regions}}"

# - name: Create Terraform blue cmk config
#   template:
#     src: "instance.tf"
#     dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
#     mode: '0600'
#   vars:
#     - color: "blue"
#     - id: "cmk"
#     - image: "{{cmk_green_image}}"
#     - flavour: "{{cmk_blue_flavour}}"
#     - region: "{{item}}"
#     - provider: "openstack"
#   loop: "{{cmk_blue_regions}}"


# - name: Create Terraform green passbolt config
#   template:
#     src: "instance.tf"
#     dest: "{{tf}}/{{deployment}}-{{workspace}}-{{color}}-{{id}}-{{region|lower}}.tf"
#     mode: '0600'
#   vars:
#     - color: "green"
#     - id: "pbt"
#     - image: "{{pbt_green_image}}"
#     - flavour: "{{pbt_green_flavour}}"
#     - region: "{{item}}"
#     - provider: "openstack"
#   loop: "{{pbt_green_regions}}"


#    - ssh.tf
#    - instances.tf

- name: Deploy instances
  community.general.terraform:
    project_path: "{{tf}}"
    state: present
    force_init: true
    workspace: "{{workspace}}"
    variables: {
      'endpoint':endpoint
    }

- name: Refresh inventory
  meta: refresh_inventory

- name: Show all hosts in inventory
  ansible.builtin.debug:
    msg: "{{ item }}"
  loop: "{{ query('inventory_hostnames', 'all') }}"

